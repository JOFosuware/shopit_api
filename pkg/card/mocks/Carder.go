// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	stripe "github.com/stripe/stripe-go/v72"
)

// Carder is an autogenerated mock type for the Carder type
type Carder struct {
	mock.Mock
}

// CreatePaymentIntent provides a mock function with given fields: currency, amount
func (_m *Carder) CreatePaymentIntent(currency string, amount int) (*stripe.PaymentIntent, string, error) {
	ret := _m.Called(currency, amount)

	if len(ret) == 0 {
		panic("no return value specified for CreatePaymentIntent")
	}

	var r0 *stripe.PaymentIntent
	var r1 string
	var r2 error
	if rf, ok := ret.Get(0).(func(string, int) (*stripe.PaymentIntent, string, error)); ok {
		return rf(currency, amount)
	}
	if rf, ok := ret.Get(0).(func(string, int) *stripe.PaymentIntent); ok {
		r0 = rf(currency, amount)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*stripe.PaymentIntent)
		}
	}

	if rf, ok := ret.Get(1).(func(string, int) string); ok {
		r1 = rf(currency, amount)
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func(string, int) error); ok {
		r2 = rf(currency, amount)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewCarder creates a new instance of Carder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCarder(t interface {
	mock.TestingT
	Cleanup(func())
}) *Carder {
	mock := &Carder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
